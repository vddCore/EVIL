// Example provided by Elijah Bansley (https://github.com/ElijahZAwesome)

var tape = {}
var pointer = 0
var codepointer = 0

io["print.orig"] = io->print;

io->print = fn(s) {
  if(s == "\n") {
    s = "\r\n"
  }
  io->print.orig(s)
}

fn main(args) {
  if(#args < 1) {
    var help = "Usage: bf <code>\r\nFor example: bf +++---<><>+[-]\r\n" +
               "File input is not supported yet."
    io->println(help)
    ret 0
  }

  var source = args[0]

  for(var i; i < 384; i++) {
    tape[i] = 0
  }

  while(codepointer < #source) {
    var char = source[codepointer]
    if(char == "+") {
      tape[pointer] = (tape[pointer] + 1) % 256
    }
    elif(char == "-") {
      tape[pointer] = (tape[pointer] - 1) % 256
    }
    elif(char == "<") {
      pointer = (pointer - 1) % #tape
    }
    elif(char == ">") {
      pointer = (pointer + 1) % #tape
    }
    elif(char == "[") {
      if(tape[pointer] == 0) {
        codepointer = findClosingBrac(source, codepointer)
      }
    }
    elif(char == "]") {
      if(tape[pointer] != 0) {
        codepointer = findOpenBrac(source, codepointer)
      }
    }
    elif(char == ".") {
      io->print(str->chr(tape[pointer]))
    }
    elif(char == ",") {
      tape[pointer] = io.read()
    }

    codepointer++
  }
}

fn printtape() {
  io->print("[" + @#tape + "] ")

  each(var i, var v : tape) {
    io->print(@v + ", ")
    if(i > 30) {
      break
    }
  }
  io->println()
}

fn findClosingBrac(text, openPos) {
    var closePos = openPos
    var counter = 1
    while(counter > 0) {
        var c = text[++closePos]
        if (c == "[") {
            counter++
        }
        elif (c == "]") {
            counter--
        }
    }
    ret closePos
}

fn findOpenBrac(text, closePos) {
    var openPos = closePos
    var counter = 1
    while(counter > 0) {
        var c = text[--openPos]
        if (c == "[") {
            counter--
        }
        elif (c == "]") {
            counter++
        }
    }
    ret openPos
}